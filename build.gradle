allprojects{
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'

    ext {
		moduleVersion = version != "unspecified"?version:'1.0'
		moduleMode = project.hasProperty('mode') ? project.getProperty('mode') : 'R'
		if(moduleMode == 'S'){
			moduleVersion = moduleVersion + "-SNAPSHOT";
		}
		publishSnapShotsURL="http://10.1.228.199:18081/nexus/content/repositories/snapshots/"
		publishReleaseURL="http://10.1.228.199:18081/nexus/content/repositories/releases/"
        builtBy="gradle 2.1"
    }

    compileJava.dependsOn clean
    sourceCompatibility = 1.8

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }

    group = 'com.ai'
}

subprojects{
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    repositories {
        maven{ url "http://10.1.228.199:18081/nexus/content/groups/public/" }
    }

    dependencies{
        compile 'com.ai:ipaas-common:1.0'
        testCompile(
                "org.springframework:spring-test:5.1.8.RELEASE",
                "junit:junit:4.12"
        )

    }
}

project("sdk-idps-base"){
    project.ext {
        moduleName = "ipaas-idps-base"
    }

    jar {
        baseName moduleName
        version moduleVersion
        include 'com/ai/paas/ipaas/image/**'
        manifest {
            attributes 'packageName': moduleName, 'Built-By': builtBy,'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
		baseName moduleName
	    version moduleVersion
	    classifier = 'sources'
	    from sourceSets.main.allSource
	}
	
	javadoc {
		exclude               "**/internal/**"
		failOnError				false
		options.memberLevel = JavadocMemberLevel.PUBLIC
		
		options.addStringOption("Xdoclint", "none")
		
	}
	
	task javadocJar(type: Jar, dependsOn: javadoc) {
		baseName moduleName
		version moduleVersion
		classifier = 'javadoc'
	
		from javadoc.destinationDir
	}
	artifacts {
	    archives sourcesJar
		archives javadocJar
	}
	
    publish.dependsOn build
}

project("sdk-idps-comp"){
    project.ext {
        moduleName = "ipaas-idps-comp"
    }

    jar {
        baseName moduleName
        version moduleVersion
        include 'com/ai/paas/ipaas/image/**'
        manifest {
            attributes 'packageName': moduleName, 'Built-By': builtBy,'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
		baseName moduleName
	    version moduleVersion
	    classifier = 'sources'
	    from sourceSets.main.allSource
	}
	javadoc {
		exclude               "**/internal/**"
		failOnError				false
		options.memberLevel = JavadocMemberLevel.PUBLIC
		
		options.addStringOption("Xdoclint", "none")
		
	}
	
	task javadocJar(type: Jar, dependsOn: javadoc) {
		baseName moduleName
		version moduleVersion
		classifier = 'javadoc'
	
		from javadoc.destinationDir
	}
	
	artifacts {
	    archives sourcesJar
		archives javadocJar
	}
	
    publish.dependsOn build
}

project("sdk-idps-srv"){
    project.ext {
        moduleName = "ipaas-idps"
    }

    jar {
        baseName moduleName
        version moduleVersion
        include 'com/ai/paas/ipaas/image/**'
        manifest {
            attributes 'packageName': moduleName, 'Built-By': builtBy,'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
        }
    }
    
    task sourcesJar(type: Jar, dependsOn: classes) {
		baseName moduleName
	    version moduleVersion
	    classifier = 'sources'
	    from sourceSets.main.allSource
	}

	javadoc {
		exclude               "**/internal/**"
		failOnError				false
		options.memberLevel = JavadocMemberLevel.PUBLIC
		
		options.addStringOption("Xdoclint", "none")
		
	}
	
	task javadocJar(type: Jar, dependsOn: javadoc) {
		baseName moduleName
		version moduleVersion
		classifier = 'javadoc'
	
		from javadoc.destinationDir
	}
	
	artifacts {
	    archives sourcesJar
		archives javadocJar
	}
	
    publish.dependsOn build
}
